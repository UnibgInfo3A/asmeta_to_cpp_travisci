<?xml version="1.0"?>
<project name="asmeta_to_cpp_travisci" default="test" basedir=".">
	<property name="main.build.dir" value="build/main" />
	<property name="main.src.dir" value="src" />
	<property name="test.build.dir" value="build/test" />
	<property name="test.src.dir" value="test" />

	<path id="classpath.base" />

	<path id="classpath.test">
		<pathelement location="lib/junit-4.11.jar" />
		<pathelement location="lib/hamcrest-core-1.3.jar" />
		<pathelement location="lib/asmeta.parser_1.0.0.jar" />
		<pathelement location="lib/asmeta.emf_1.0.0.jar" />
		<pathelement location="lib/org.eclipse.emf.common.jar" />
		<pathelement location="lib/org.eclipse.emf.ecore.jar" />
		<pathelement location="lib/log4j.jar" />
		<pathelement location="${main.build.dir}" />
		<path refid="classpath.base" />
	</path>

	<target name="test" depends="run, clean" />

	<target name="compile">
		<mkdir dir="${main.build.dir}" />
		<javac srcdir="${main.src.dir}" destdir="${main.build.dir}" includeantruntime="false">
			<classpath refid="classpath.base" />
		</javac>
	</target>

	<target name="build" depends="compile">
		<mkdir dir="${test.build.dir}" />
		<javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
			<classpath refid="classpath.test" />
		</javac>
		<echo message="Build done" />
	</target>

	<!-- Test and build all files  -->
	<!-- To run this: use "ant" (default) or "ant run" -->
	<target name="run" depends="build">
		<junit printsummary="on" haltonfailure="yes">
			<classpath>
				<path refid="classpath.test" />
				<pathelement location="${test.build.dir}" />
			</classpath>
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${test.src.dir}" includes="**/*Test*.java" />
			</batchtest>
		</junit>
	</target>


	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="lib/jacocoant.jar" />
	</taskdef>

	
	<target name="coverage" depends="build">

		<coverage destfile="docs/jacoco.exec">
			<junit fork="true" forkmode="once">
				<test name="asmeta_to_cpp_travisci.ParserTest" />
				<classpath>
					<pathelement location="./bin" />
				</classpath>
			</junit>
		</coverage>
		<report>

			<executiondata>
				<file file="jacoco.exec" />
			</executiondata>

			<merge destfile="merged.exec">
				<fileset dir="executionData" includes="*.exec" />
			</merge>


			<structure name="Example Project">
				<classfiles>
					<fileset dir="classes" />
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="docs" />
				</sourcefiles>
			</structure>

			<html destdir="docs/report.html" />
			<csv destfile="docs/report.csv" />

		</report>
	</target>
	<!-- delete all class files -->
	<!-- To run this: use "ant clean" -->
	<target name="clean">
		<delete>
			<fileset dir="${basedir}" includes="**/*.class" />
		</delete>
		<echo message="clean done" />
	</target>
</project>
